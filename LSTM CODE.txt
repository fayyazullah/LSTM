from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

#Data preparation
Data=[[[i+j]for i in range (5)]for j in range (100)]
target =[(i+5)for i in range (100)]


Data

data= np.array(Data,dtype=float)
target =np.array(target,dtype=float)

data.shape

target.shape

x_train,x_test,y_train,y_test=train_test_split(data,target,test_size=0.2,random_state=4)

#RNN Model
model=Sequential()

model.add(LSTM((1),batch_input_shape=(None,5,1),return_sequences=False))

model.compile(loss='mean_absolute_error',optimizer='adam',metrics=['accuracy'])

model.summary()

results =model.predict(x_test)
plt.scatter(range(20),results,c='r')
plt.scatter(range(20),y_test,c='g')
plt.show()


plt.plot(history.history['loss'])
plt.show()

##Various size input -simple solution ->padding to make inputs of same size or ....

Data=[[[(i+j)/100]for i in range(7)]for j in range(100)]
target=[(i+7)/100 for i in range (100)]